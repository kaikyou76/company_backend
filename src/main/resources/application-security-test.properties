# Security Test Environment Configuration

# PostgreSQL データベース設定 (テスト環境)
spring.datasource.url=jdbc:postgresql://localhost:5432/comsys_test
spring.datasource.username=postgres
spring.datasource.password=AM2013japan
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate 設定
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# PostgreSQL最適化設定
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Tokyo
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=true

# データベース接続プール最適化
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# ログレベル設定
logging.level.com.example.companybackend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=ERROR

# JWT設定 (テスト環境用)
app.jwt.secret=YourSecretKeyThatShouldBeAtLeast256BitsLongForSecurityPurposes
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000
jwt.issuer=company-backend-test

# サーバー設定
server.port=0

# メール通知の有効化フラグ
app.notification.email.enabled=false

# CSRF保護設定（テスト環境 - 監視モード）
app.security.csrf.enabled=true
app.security.csrf.monitoring-mode=true
app.security.csrf.warning-mode=true
app.security.csrf.origin-validation-enabled=true
app.security.csrf.allowed-origins=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,https://localhost:3000,https://localhost:3001,https://127.0.0.1:3000,https://localhost:8080,http://localhost:8080
app.security.csrf.excluded-paths=/api/auth/**,/actuator/**,/api/public/**
app.security.csrf.protected-methods=POST,PUT,DELETE,PATCH

# セキュリティ設定
app.security.allowed-origins=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000
app.security.max-age=3600

# セキュリティヘッダー設定
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Spring Batch設定
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=always

# Bean定義の上書きを許可
spring.main.allow-bean-definition-overriding=true