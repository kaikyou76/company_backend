# Production Environment Configuration for AWS EC2
# This version uses direct values instead of environment variables for easier deployment

# PostgreSQL Database Settings (Production - AWS EC2)
spring.datasource.url=jdbc:postgresql://localhost:5432/comsys
spring.datasource.username=postgres
spring.datasource.password=AM2023japan
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Settings
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# PostgreSQL Optimization Settings
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Tokyo
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=true

# Database Connection Pool Optimization
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# Logging Level Settings
logging.level.com.example.companybackend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.web.csrf=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.apache.coyote.http11=DEBUG
logging.level.org.apache.coyote=DEBUG
logging.level.org.apache.tomcat.util.net=DEBUG

# Security Settings (Production)
spring.security.debug=true

# JWT Settings (Production)
app.jwt.secret=YourSecretKeyThatShouldBeAtLeast256BitsLongForSecurityPurposes
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000
jwt.issuer=company-backend-prod

# HTTPS Configuration - Behind Nginx proxy (port 8080)
server.port=8080
server.ssl.enabled=false

# Force port binding and connection settings
server.connection-timeout=30000
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20
server.tomcat.max-http-connections=10000

# Connection settings for Nginx proxy
server.connection-timeout=30000
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20

# Forwarded headers for Nginx proxy
server.forward-headers-strategy=native
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

# Tomcat connector settings
server.tomcat.connection-timeout=20000
server.tomcat.max-http-connections=10000

# Email Server Settings (Production - Prepare for future use)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Email Notification Enable Flag (Currently disabled)
app.notification.email.enabled=false

# Production CORS Settings (Nginx handles HTTPS, backend receives HTTP)
app.security.allowed-origins=https://www.kaikyou.dpdns.org,https://kaikyou.dpdns.org,http://localhost:8080

# Production Cookie Settings (Nginx handles HTTPS, backend receives HTTP)
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=strict

# Production CSRF Settings (Nginx handles HTTPS, backend receives HTTP)
app.csrf.cookie-secure=false
app.csrf.cookie-domain=.kaikyou.dpdns.org

# CSRF Protection Settings (Production - Gradually transition to protection mode)
app.security.csrf.enabled=true
app.security.csrf.monitoring-mode=true
app.security.csrf.warning-mode=true
app.security.csrf.origin-validation-enabled=true
# Change to your actual domain for production
app.security.csrf.allowed-origins=https://www.kaikyou.dpdns.org,https://kaikyou.dpdns.org

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true