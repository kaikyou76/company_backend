# Production Environment Configuration

# PostgreSQL データベース設定 (本番環境)
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/company_system}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate 設定
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# PostgreSQL方言は自動検出されるため明示的指定不要（Spring Boot 3.x）

# PostgreSQL最適化設定
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Tokyo
# JDBCメタデータ自動検出を有効化（方言自動決定のため）
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=true

# データベース接続プール最適化
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000

# ログレベル設定
logging.level.com.example.companybackend=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN

# セキュリティ設定 (本番環境用)
spring.security.debug=false

# JWT設定 (本番環境用)
jwt.secret=${JWT_SECRET:mySecretKeyForCompanyBackendSystemThatIsLongEnoughFor256Bits}
jwt.expiration=86400
jwt.refresh.expiration=604800
jwt.issuer=company-backend-prod

# サーバー設定
server.port=${SERVER_PORT:8080}

# メールサーバー設定 (本番環境用 - 将来の使用のために準備)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# メール通知の有効化フラグ (現在は無効化)
app.notification.email.enabled=false# 
CSRF保護設定（本番環境 - 段階的に保護モードに移行）
app.security.csrf.enabled=true
app.security.csrf.monitoring-mode=true
app.security.csrf.warning-mode=true
app.security.csrf.origin-validation-enabled=true
# 本番環境の実際のドメインに変更してください
app.security.csrf.allowed-origins=https://your-domain.com,https://www.your-domain.com