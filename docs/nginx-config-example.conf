# Nginx Configuration Example for Spring Boot Application
# This configuration demonstrates best practices for reverse proxy setup

# =============================================================================
# Server block configuration
# =============================================================================
server {
    # Listening ports
    listen 80;
    listen 443 ssl http2;
    
    # Server name (replace with your domain)
    server_name kaikyou.dpdns.org www.kaikyou.dpdns.org;

    # SSL certificate configuration (replace with your certificate paths)
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private.key;
    
    # SSL security configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # =============================================================================
    # Root location - serve static files or redirect
    # =============================================================================
    location / {
        # For static files, configure root and try_files
        # root /var/www/html;
        # try_files $uri $uri/ =404;
        
        # For proxy to backend application
        proxy_pass http://localhost:8080;
        
        # =============================================================================
        # Proxy header configuration (ensure backend application gets correct request information)
        # =============================================================================
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Uri $request_uri;

        # =============================================================================
        # Optimized proxy timeout configuration (solve connection interruption issue)
        # Increased timeouts to handle slow clients and long-running requests
        # =============================================================================
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_request_buffering off;

        # =============================================================================
        # Buffer configuration for better performance
        # =============================================================================
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # =============================================================================
        # Connection configuration
        # =============================================================================
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Client max body size
        client_max_body_size 50M;
    }
    
    # =============================================================================
    # API endpoints - direct proxy to backend
    # =============================================================================
    location /api/ {
        proxy_pass http://localhost:8080/api/;
        
        # Header configuration
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # =============================================================================
        # Optimized proxy timeout configuration for API endpoints
        # =============================================================================
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_request_buffering off;
        
        # Buffer configuration
        proxy_buffering off;
        
        # Connection configuration
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
    
    # =============================================================================
    # Health check endpoint
    # =============================================================================
    location /health {
        proxy_pass http://localhost:8080/actuator/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # =============================================================================
    # Error pages
    # =============================================================================
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # =============================================================================
    # Logging configuration
    # =============================================================================
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log;
}

# =============================================================================
# Additional server block for www redirect
# =============================================================================
server {
    listen 80;
    server_name kaikyou.dpdns.org;
    return 301 https://www.kaikyou.dpdns.org$request_uri;
}

server {
    listen 443 ssl http2;
    server_name kaikyou.dpdns.org;
    
    # SSL certificate configuration (same as above)
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private.key;
    
    # Redirect to www version
    return 301 https://www.kaikyou.dpdns.org$request_uri;
}